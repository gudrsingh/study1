Cloud Build: Infrastructure resources are managed using a GitOps model. Declarative IaC is written in Terraform and managed in a version control system for review and approval, and resources are deployed using Cloud Build as the continuous integration and continuous deployment (CI/CD) automation tool. The pipeline also enforces policy-as-code checks to validate that resources meet expected configurations before deployment.
Cloud Identity: Users and group membership are synchronized from your existing identity provider. Controls for user account lifecycle management and single sign-on (SSO) rely on the existing controls and processes of your identity provider.
Identity and Access Management (IAM): Allow policies (formerly known as IAM policies) allow access to resources and are applied to groups based on job function. Users are added to the appropriate groups to receive view-only access to foundation resources. All changes to foundation resources are deployed through the CI/CD pipeline which uses privileged service account identities.
Resource Manager: All resources are managed under a single organization, with a resource hierarchy of folders that organizes projects by environments. Projects are labeled with metadata for governance including cost attribution.
Networking: Network topologies use Shared VPC to provide network resources for workloads across multiple regions and zones, separated by environment, and managed centrally. All network paths between on-premises hosts, Google Cloud resources in the VPC networks, and Google Cloud services are private. No outbound traffic to or inbound traffic from the public internet is permitted by default.
Cloud Logging: Aggregated log sinks are configured to collect logs relevant for security and auditing into a centralized project for long-term retention, analysis, and export to external systems.
Cloud Monitoring: Monitoring scoping projects are configured to view application performance metrics across multiple projects in one place.
Organization Policy Service: Organization policy constraints are configured to prevent various high-risk configurations.
Secret Manager: Centralized projects are created for a team responsible for managing and auditing the use of sensitive application secrets to help meet compliance requirements.
Cloud Key Management Service (Cloud KMS): Centralized projects are created for a team responsible for managing and auditing encryption keys to help meet compliance requirements.
Security Command Center: Threat detection and monitoring capabilities are provided using a combination of built-in security controls from Security Command Center and custom solutions that let you detect and respond to security events.

==============N/W===============
The preceding diagram guides you through the following questions:
Do you require Layer 7 inspection using network appliances between different workloads in Google Cloud?
If yes, see Hub-and-spoke topology with centralized appliances.
If no, proceed to the next question.
Do many of your workloads require on-premises connectivity?
If yes, go to decision point 4.
If no, proceed to the next question.
Can your workloads communicate using private endpoints in a service producer and consumer model?
If yes, see Expose services in a consumer-producer model with Private Service Connect.
If no, proceed to the next question.
Do you want to administer firewalling and routing centrally?
If yes, see Shared VPC network for each environment.
If no, see Hub-and-spoke topology without appliances.
